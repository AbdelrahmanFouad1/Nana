// Mocks generated by Mockito 5.4.4 from annotations
// in nana/test/src/features/home/presentation/cubit/home_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nana/core/util/resources/common_dependencies.dart' as _i6;
import 'package:nana/features/home/data/models/product_model.dart' as _i7;
import 'package:nana/features/home/domain/repository/home_repository.dart'
    as _i2;
import 'package:nana/features/home/domain/usecases/products_usecase.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHomeRepository_0 extends _i1.SmartFake
    implements _i2.HomeRepository {
  _FakeHomeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsUseCase extends _i1.Mock implements _i4.ProductsUseCase {
  MockProductsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HomeRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeHomeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.HomeRepository);

  @override
  _i5.Future<_i3.Either<_i6.AppExceptions, List<_i7.ProductModel>>> call(
          _i4.PaginationData? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [data],
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.AppExceptions, List<_i7.ProductModel>>>.value(
            _FakeEither_1<_i6.AppExceptions, List<_i7.ProductModel>>(
          this,
          Invocation.method(
            #call,
            [data],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.AppExceptions, List<_i7.ProductModel>>>);
}
